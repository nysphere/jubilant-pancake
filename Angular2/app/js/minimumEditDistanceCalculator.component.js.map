{"version":3,"sources":["minimumEditDistanceCalculator.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAUA;gBAOC,gDAAoB,aAA2B;oBAA3B,kBAAa,GAAb,aAAa,CAAc;oBAL/C,YAAO,GAAG,EAAE,CAAC;oBACb,YAAO,GAAG,EAAE,CAAC;oBACb,YAAO,GAAG,EAAE,CAAC;oBACb,gBAAW,GAAG,SAAS,CAAC;oBAGvB,IAAI,CAAC,OAAO,GAAG,2DAA2D,CAAC;gBAC5E,CAAC;gBAED,wDAAO,GAAP;oBAAA,iBAiBI;oBAfH,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;oBAElB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAG,EAAE,IAAI,IAAI,CAAC,OAAO,KAAG,EAAE,CAAC,CAAA,CAAC;wBAC3C,IAAI,CAAC,OAAO,IAAI,+GAA+G,CAAC;oBACjI,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,OAAO,IAAI,kHAAgH,IAAI,CAAC,OAAO,CAAC,MAAM,OAAI,CAAC;oBACzJ,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;wBAChC,IAAI,CAAC,OAAO,IAAI,mHAAiH,IAAI,CAAC,OAAO,CAAC,MAAM,OAAI,CAAC;oBAC1J,CAAC;oBAED,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9E,UAAA,IAAI,IAAM,KAAI,CAAC,OAAO,IAAI,wBAAsB,IAAI,CAAC,mBAAmB,MAAG,CAAC,CAAC,KAAI,CAAC,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,EAC5G,UAAA,KAAK,IAAM,KAAI,CAAC,OAAO,GAAG,kDAAkD,CAAC,CAAC,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAC5G,CAAC;gBAEA,CAAC;gBAnCL;oBAAC,gBAAS,CAAC;wBACV,QAAQ,EAAE,kCAAkC;wBAC5C,WAAW,EAAE,6CAA6C;wBAC1D,SAAS,EAAE,CAAC,uCAAuC,CAAC;wBACpD,SAAS,EAAE,CAAC,4BAAY,CAAC;qBACzB,CAAC;;0DAAA;gBAgCF,6CAAC;YAAD,CA9BA,AA8BC,IAAA;YA9BD,2FA8BC,CAAA","file":"minimumEditDistanceCalculator.component.js","sourcesContent":["import {Component} from 'angular2/core';\nimport {UtilsService} from './service/Utils.service';\n\n@Component({\n\tselector: 'minimum-edit-distance-calculator',\n\ttemplateUrl: 'partials/minimumEditDistanceCalculator.html',\n\tstyleUrls: ['css/minimumEditDistanceCalculator.css'],\n\tproviders: [UtilsService]\n})\n\nexport class MinimumEditDistanceCalculatorComponent { \n\n\tstring1 = '';\n\tstring2 = '';\n\tmessage = '';\n\tmessageMode = 'warning';\n\n\tconstructor(private _utilsService: UtilsService) {\n\t\tthis.message = 'Edit distance between these 2 strings will be calculated.';\n\t}\n\n\tonClick() {\n\t\t\n\t\tthis.message = '';\n\t\t\n\t\tif (this.string1==='' && this.string2===''){\n\t\t\tthis.message += 'I did not need to make the call since both strings were empty and I could easily give the result which is 0. ';\n\t\t} else if (this.string1 === '') {\n\t\t\tthis.message += `I did not need to make the call since the first string was empty and I could easily give the result which is ${this.string2.length}. `;\n\t\t} else if (this.string2 === '') {\n\t\t\tthis.message += `I did not need to make the call since the second string was empty and I could easily give the result which is ${this.string1.length}. `;\n\t\t}\n\t\t\n\t\tthis._utilsService.getMinimumEditDistance(this.string1, this.string2).subscribe(\n\t\t\tdata => { this.message += `Server response is ${data.minimumEditDistance}.`; this.messageMode = 'success'; },\n\t\t\terror => { this.message = 'Something went terribly wrong. Please try again.'; this.messageMode = 'danger'; }\n\t\t);\n\t\t\n    }\n\n}"],"sourceRoot":"/source/"}